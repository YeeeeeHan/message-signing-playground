/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Pet, PetInterface } from "../../../contracts/nfts/Pet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_frgTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFrgBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frgTokenAddress",
    outputs: [
      {
        internalType: "contract Frg",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "safeMintWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a034620003a2576001600160401b03601f601f1962001ed33881900383810183168601858111878210176200038c57869282916040528339602095869181010312620003a257516001600160a01b03938482169391849003620003a25762000067620003a7565b916003908184526214195d60ea1b8885015262000083620003a7565b978289526214115560ea1b818a01528451958487116200038c576000968754966001978881811c9116801562000381575b858210146200036d579081868493116200031a575b508490868311600114620002ba578a92620002ae575b505060001982871b1c191690871b1787555b89519485116200029a5785548681811c911680156200028f575b838210146200027b5783811162000233575b5081928511600114620001c95750508495969783949593620001bd575b505082841b92600019911b1c19161790555b600b54903360018060a01b0319831617600b557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0604051943393169180a3678ac7230489e80000600d55608052611b0b9081620003c88239608051818181610173015281816105990152610b490152f35b0151915038806200013a565b849392919316988587528387209387905b8b82106200021b57505084869798999a1062000200575b50505050811b0190556200014c565b01519060f884600019921b161c1916905538808080620001f1565b808885978294968601518155019601930190620001da565b8688528288208480880160051c82019285891062000271575b0160051c019087905b828110620002655750506200011d565b89815501879062000255565b925081926200024c565b634e487b7160e01b88526022600452602488fd5b90607f16906200010b565b634e487b7160e01b87526041600452602487fd5b015190503880620000df565b90848a9416918b8052868c20928c5b88828210620003035750508411620002ea575b505050811b018755620000f1565b015160001983891b60f8161c19169055388080620002dc565b8385015186558d97909501949384019301620002c9565b909150898052848a208680850160051c82019287861062000363575b918b91869594930160051c01915b82811062000354575050620000c9565b8c81558594508b910162000344565b9250819262000336565b634e487b7160e01b8a52602260045260248afd5b90607f1690620000b4565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b038111838210176200038c5760405256fe608060409080825260048036101561001657600080fd5b600091823560e01c90816301ffc9a714610db05750806306fdde0314610d08578063081812fc14610ce7578063095ea7b314610b7857806310195e6e14610b3457806318160ddd14610b1557806323b872dd14610af05780632c4e722e14610ad15780632f745c5914610a2457806342842e0e146109f05780634f6ccce71461095d5780636352211e1461092b57806370a08231146108fe578063715018a6146108a15780638da5cb5b1461087857806395d89b4114610795578063a22cb465146106ca578063b88d4fde14610644578063c6f0577114610551578063c87b56dd1461043b578063e985e9c5146103eb578063f2fde38b1461031d5763fb00af221461012157600080fd5b346102985760a036600319011261029857803567ffffffffffffffff8111610319576101509036908301610f97565b906044359360ff85168095036102bd5780516370a0823160e01b815233818401527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169290602081602481875afa90811561030f5786916102de575b50600d548091106102cf578596849695963b156102cb5783519163d505accf60e01b8352338484015230602484015260448301526024356064830152608482015260643560a482015260843560c4820152848160e48183885af180156102c1579085916102a9575b5050600d54833b156102a557825163079cc67960e41b815233928101928352602083019190915292849184919082908490829060400103925af190811561029c5750610284575b5061028182600c5460018101600c5561027c8133611762565b611931565b80f35b61028d90610edc565b610298578138610263565b5080fd5b513d84823e3d90fd5b8480fd5b6102b290610edc565b6102bd57833861021c565b8380fd5b83513d87823e3d90fd5b8580fd5b5090516304a6c46b60e41b8152fd5b90506020813d8211610307575b816102f860209383610f22565b810103126102cb5751386101b4565b3d91506102eb565b83513d88823e3d90fd5b8280fd5b5082903461031957602036600319011261031957610339610e76565b90610342610fb5565b6001600160a01b03918216928315610399575050600b54826bffffffffffffffffffffffff60a01b821617600b55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b828434610298578060031936011261029857602091610408610e76565b82610411610e91565b9260018060a01b03809316815260058652209116600052825260ff81600020541690519015158152f35b5034610298576020918260031936011261054e575035600081815260026020526040902054610474906001600160a01b03161515611084565b600052600a81528160002091805180936000908054610492816110f3565b918285526001918783821691826000146105275750506001146104e4575b5050506104e092916104c3910385610f22565b600081516104d081610f06565b5251928284938452830190610e36565b0390f35b86935060009291925282600020916000925b82841061050f57505050820101816104c36104e06104b0565b8054848a0186015288955087949093019281016104f6565b60ff19168782015293151560051b860190930193508492506104c391506104e090506104b0565b80fd5b509134610298578060031936011261029857823567ffffffffffffffff8111610319576105819036908501610f97565b9061058a610e91565b93610593610fb5565b600d54907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102cb57835163079cc67960e41b81526001600160a01b03881691810191825260208201939093529192918591849182908490829060400103925af190811561063b5750610628575b50610281919261027c600c54809260018201600c55611762565b9161063561028193610edc565b9161060e565b513d85823e3d90fd5b50346102985760803660031901126102985761065e610e76565b90610667610e91565b916044356064359367ffffffffffffffff85116102cb57366023860112156102cb576106a26106c59486602461028198369301359101610f60565b926106b56106b08433611244565b61116b565b6106c083838361130c565b61168a565b611220565b5082346103195780600319360112610319576106e4610e76565b90602435918215158093036102a5576001600160a01b0316923384146107535750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b8284346102985781600319360112610298578051908260018054916107b9836110f3565b8086529282811690811561085057506001146107f4575b5050506107e2826104e0940383610f22565b51918291602083526020830190610e36565b94508085527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828610610838575050506107e28260206104e095820101946107d0565b8054602087870181019190915290950194810161081b565b6104e09750869350602092506107e294915060ff191682840152151560051b820101946107d0565b828434610298578160031936011261029857600b5490516001600160a01b039091168152602090f35b823461054e578060031936011261054e576108ba610fb5565b600b80546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8284346102985760203660031901126102985760209061092461091f610e76565b61100d565b9051908152f35b5091903461054e57602036600319011261054e575061094c602092356110d0565b90516001600160a01b039091168152f35b50903461054e57602036600319011261054e57508035906008548210156109985760208361098a84611715565b91905490519160031b1c8152f35b608490602084519162461bcd60e51b8352820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152fd5b828434610298576106c561028191610a0736610ea7565b91925192610a1484610f06565b8684526106b56106b08433611244565b5091903461054e578160031936011261054e57610a3f610e76565b60243590610a4c8161100d565b821015610a7a576001600160a01b031682526006602090815283832091835290815290829020548251908152f35b835162461bcd60e51b8152602081870152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608490fd5b828434610298578160031936011261029857602090600d549051908152f35b823461054e57610281610b0236610ea7565b91610b106106b08433611244565b61130c565b8284346102985781600319360112610298576020906008549051908152f35b828434610298578160031936011261029857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50829034610319578160031936011261031957610b93610e76565b6024359290916001600160a01b0391908280610bae876110d0565b16941693808514610c9a57803314908115610c7b575b5015610c1357848652602052842080546001600160a01b03191683179055610beb836110d0565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff828720541687610bc4565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091903461054e57602036600319011261054e575061094c6020923561112d565b828434610298578160031936011261029857805190828054610d29816110f3565b808552916001918083169081156108505750600114610d54575050506107e2826104e0940383610f22565b80809650527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828610610d98575050506107e28260206104e095820101946107d0565b80546020878701810191909152909501948101610d7b565b91905034610319576020366003190112610319573563ffffffff60e01b8116809103610319576020925063780e9d6360e01b8114908115610df3575b5015158152f35b6380ac58cd60e01b811491508115610e25575b8115610e14575b5083610dec565b6301ffc9a760e01b14905083610e0d565b635b5e139f60e01b81149150610e06565b919082519283825260005b848110610e62575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e41565b600435906001600160a01b0382168203610e8c57565b600080fd5b602435906001600160a01b0382168203610e8c57565b6060906003190112610e8c576001600160a01b03906004358281168103610e8c57916024359081168103610e8c579060443590565b67ffffffffffffffff8111610ef057604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610ef057604052565b90601f8019910116810190811067ffffffffffffffff821117610ef057604052565b67ffffffffffffffff8111610ef057601f01601f191660200190565b929192610f6c82610f44565b91610f7a6040519384610f22565b829481845281830111610e8c578281602093846000960137010152565b9080601f83011215610e8c57816020610fb293359101610f60565b90565b600b546001600160a01b03163303610fc957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b0316801561102d57600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b1561108b57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152600260205260409020546001600160a01b0316610fb2811515611084565b90600182811c92168015611123575b602083101461110d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611102565b600081815260026020526040902054611150906001600160a01b03161515611084565b6000908152600460205260409020546001600160a01b031690565b1561117257565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561122757565b60405162461bcd60e51b815280611240600482016111cd565b0390fd5b906001600160a01b038080611258846110d0565b1693169183831493841561128b575b508315611275575b50505090565b6112819192935061112d565b161438808061126f565b909350600052600560205260406000208260005260205260ff604060002054169238611267565b156112b957565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b61133091611319846110d0565b6001600160a01b03938484169391851684146112b2565b83821693841561151d57839182611464575090506008549085600052600960205281604060002055600160401b821015610ef0576113b1926113988761137d856001899701600855611715565b90919082549060031b600019811b9283911b16911916179055565b828603611431575b506113aa866110d0565b16146112b2565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60008481526004602052604081206bffffffffffffffffffffffff60a01b9081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b61143a9061100d565b604060008781526006602052818120838252602052888282205588815260076020522055386113a0565b858303611476575b506113b192611398565b61148191925061100d565b600019810191908211611507576113b192849260009088825260209060078252604091828420548281036114d0575b508a8452838381205586845260068152828420918452528120559261146c565b87855260068252838520838652825283852054888652600683528486208287528352808587205585526007825283852055386114b0565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b15611680576115bc946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610e36565b03926001600160a01b03165af1849181611640575b5061162f575050503d600014611627573d6115eb81610f44565b906115f96040519283610f22565b81528091833d92013e5b805191826116245760405162461bcd60e51b815280611240600482016111cd565b01fd5b506060611603565b6001600160e01b0319161492509050565b9091508581813d8311611679575b6116588183610f22565b810103126102a557516001600160e01b0319811681036102a55790386115d1565b503d61164e565b5050915050600190565b9293600093909291803b1561170a579484916116e49660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610e36565b0393165af1849181611640575061162f575050503d600014611627573d6115eb81610f44565b505050915050600190565b60085481101561174c5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b634e487b7160e01b600052603260045260246000fd5b9060409182519261177284610f06565b60008085526001600160a01b0383169182156118a2576000858152600260205260409020546117ad906001600160a01b031615155b156118e5565b600854858352602090600982528083852055600160401b81101561188e579286949192600286946117f06106c59a61137d89600161188c9f9d9b01600855611715565b6117f98761100d565b858552600682528385208186528252838520879055868552600782528385205560008681526002602052604090205461183c906001600160a01b031615156117a7565b848452600381528284208054600101905585845252812080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a461156e565b565b634e487b7160e01b84526041600452602484fd5b5162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606490fd5b156118ec57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b6000818152600260205260409020549192916001600160a01b031615611a79576000908152602092600a8452604082209181519167ffffffffffffffff8311611a655761197e84546110f3565b601f8111611a22575b508591601f84116001146119c1578394959650926119b6575b50508160011b916000199060031b1c1916179055565b0151905038806119a0565b9190601f1984169685845280842093905b888210611a0a575050836001959697106119f1575b505050811b019055565b015160001960f88460031b161c191690553880806119e7565b806001859682949686015181550195019301906119d2565b848352868320601f850160051c810191888610611a5b575b601f0160051c01905b818110611a505750611987565b838155600101611a43565b9091508190611a3a565b634e487b7160e01b82526041600452602482fd5b60405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608490fdfea2646970667358221220ed2c656e8609dc7faae96e5cd9d671258dfe23592794cb46705db099872f65df64736f6c63430008110033";

type PetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pet__factory extends ContractFactory {
  constructor(...args: PetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _frgTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pet> {
    return super.deploy(_frgTokenAddress, overrides || {}) as Promise<Pet>;
  }
  override getDeployTransaction(
    _frgTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_frgTokenAddress, overrides || {});
  }
  override attach(address: string): Pet {
    return super.attach(address) as Pet;
  }
  override connect(signer: Signer): Pet__factory {
    return super.connect(signer) as Pet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PetInterface {
    return new utils.Interface(_abi) as PetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pet {
    return new Contract(address, _abi, signerOrProvider) as Pet;
  }
}
