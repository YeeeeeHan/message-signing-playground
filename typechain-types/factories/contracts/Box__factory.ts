/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Box, BoxInterface } from "../../contracts/Box";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761022f908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80632e64cec11461016157636057361d1461003357600080fd5b3461015e5760208060031936011261015a576004359060405161005581610193565b603c81527f5b4c6f676765642066726f6d20736d61727420636f6e74726163745d2053746f828201527f7265642025732076616c75652c206d73672e73656e6465723a2025730000000060408201526040519163038fd88960e31b8184015260606024840152815191826084850152855b83811061014657867f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c596101408861012d8961012860a4828c89838284010152866044830152336064830152601f801991011681010360848101845201826101bc565b6101de565b8084556040519081529081906020820190565b0390a180f35b81810183015185820160a4015282016100c6565b5080fd5b80fd5b503461015e578060031936011261015e575460805260206080f35b50634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176101af57604052565b6101b761017c565b604052565b90601f8019910116810190811067ffffffffffffffff8211176101af57604052565b600080916020815191016a636f6e736f6c652e6c6f675afa5056fea26469706673582212205c297e6dced43bccb99c38e9eda5c80d9a312efd205696ffae6b89ac646bb62c64736f6c63430008110033";

type BoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Box__factory extends ContractFactory {
  constructor(...args: BoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Box> {
    return super.deploy(overrides || {}) as Promise<Box>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Box {
    return super.attach(address) as Box;
  }
  override connect(signer: Signer): Box__factory {
    return super.connect(signer) as Box__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoxInterface {
    return new utils.Interface(_abi) as BoxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Box {
    return new Contract(address, _abi, signerOrProvider) as Box;
  }
}
